import{_ as p,W as m,X as k,Y as n,Z as e,$ as s,a0 as a,a1 as u,A as d}from"./framework-6d29b987.js";const h={},b=n("h1",{id:"uigf-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uigf-api","aria-hidden":"true"},"#"),e(" UIGF API")],-1),v=n("h2",{id:"介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),e(" 介绍")],-1),_=n("p",null,[e("在统一可交换祈愿记录标准2.3版本中，我们将"),n("code",null,"item_id"),e("的优先度提高，成为必填的字段。 这将允许 UIGF 数据集支持国际服的多语言环境，进而将更多的原神工具连接在一起。")],-1),g=n("p",null,"但是，一些程序运行于受限的环境中，在将祈愿获取物品名称转化为物品 ID 的过程中有困难。所以 UIGF-Org 提供了一个用于翻译物品文本的 API， 供需要该资源的任何开源程序使用。",-1),y={href:"https://github.com/UIGF-org/UIGF-API",target:"_blank",rel:"noopener noreferrer"},f=n("h2",{id:"使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用","aria-hidden":"true"},"#"),e(" 使用")],-1),j=n("p",null,"UIGF API 有三个常用接口，示例如下",-1),x={id:"翻译接口",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#翻译接口","aria-hidden":"true"},"#",-1),q=u(`<p>翻译接口会将指定语言的文本文字转义为原神内置的物品 ID 或通过反向翻译将指定的物品 ID 翻译成指定语言</p><ul><li>接口地址：<code>https://api.uigf.org/translate/</code></li><li>Body Json<div class="language-Json line-numbers-mode" data-ext="Json"><pre class="language-Json"><code>{
  &quot;lang&quot;: &quot;language&quot;,
  &quot;type&quot;: &quot;normal|reverse&quot;,
  &quot;item_name&quot;: &quot;str | str[]&quot;,
  &quot;item_id&quot;: &quot;int | int[]&quot;
  
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="请求参数" tabindex="-1"><a class="header-anchor" href="#请求参数" aria-hidden="true">#</a> 请求参数</h4><ul><li><code>lang</code> <strong>必填</strong><ul><li>需要翻译的文本的原始语言</li><li>可接受的语言参数包括 <code>chs</code>, <code>cht</code>, <code>de</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>id</code>, <code>jp</code>, <code>kr</code>, <code>pt</code>, <code>ru</code>, <code>th</code>, <code>vi</code></li></ul></li><li><code>type</code> <strong>必填</strong><ul><li>翻译接口的方法 <ul><li>当 <code>type</code> 值为 <code>normal</code> 时，接口将文本翻译成物品 ID</li><li>当 <code>type</code> 值为 <code>reverse</code> 时，接口将物品 ID 翻译成文本</li></ul></li></ul></li><li><code>item_name</code> <strong>当 <code>type: normal</code> 时必填</strong><ul><li>需要翻译的文本或文本列表 <ul><li>需要翻译的文本（单条数据查询时） <ul><li>比如：<code>神里绫华</code></li></ul></li><li>或者一个包含翻译文本的列表（多条数据查询时） <ul><li>由方括号包裹字串符，以英文半角逗号间隔，不需要包含空格和引号 <ul><li>比如：<code>[神里绫华,神里绫人]</code></li></ul></li></ul></li></ul></li></ul></li><li><code>item_id</code> <strong>当 <code>type: reverse</code> 时必填</strong><ul><li>需要翻译的物品 ID</li><li>数据规则和<code>item_name</code>一致，支持单个整数或一个整数列表</li></ul></li></ul><h4 id="返回格式" tabindex="-1"><a class="header-anchor" href="#返回格式" aria-hidden="true">#</a> 返回格式</h4><ul><li>当请求单个文本翻译 <ul><li>成功时，将返回一个<code>Json</code><ul><li><code>item_id</code>键的值为对应物品 ID</li><li><code>item_name</code>键的值为对应物品名称</li></ul></li><li>失败时，将返回 <code>HTTP 404 NOT FOUND</code> 错误</li></ul></li><li>当请求多个文本翻译 <ul><li>成功时，将返回一个<code>Json</code><ul><li><code>item_id</code>或<code>item_name</code>的值为一个列表</li><li>当列表中有文本不存在于数据库中，则会为该记录返回值为<code>0</code>的 ID</li><li>当列表中有 ID 不存在于数据库中，则会为该记录返回值为<code>&quot;&quot;</code>的名称</li><li>使用该方法请求 API 时需要检验请求的列表长度是否等于返回的列表的长度</li></ul></li><li>失败时，将返回 <code>HTTP 404 NOT FOUND</code> 错误</li></ul></li></ul>`,6),A=n("p",null,[n("strong",null,"Request Body")],-1),D=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},'"lang"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"chs"'),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"item_name"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"珊瑚宫心海"'),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"type"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"normal"'),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=n("p",null,[n("strong",null,"Response")],-1),P=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),e(`
`),n("span",{class:"token property"},'"item_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"10000054"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),U=n("p",null,null,-1),B=n("p",null,[n("strong",null,"Request Body")],-1),F=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},'"lang"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"chs"'),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"item_name"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"[神里绫华,神里绫人,不存在的角色,纳西妲,妮露,甘雨,珊瑚宫心海]"'),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"type"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"normal"'),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("p",null,[n("strong",null,"Response")],-1),G=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},'"item_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"["),e(`
    `),n("span",{class:"token number"},"10000002"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token number"},"10000066"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token number"},"10000073"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token number"},"10000070"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token number"},"10000037"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token number"},"10000054"),e(`
  `),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),N=n("p",null,[n("strong",null,"Request Body")],-1),R=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},'"lang"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"chs"'),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"item_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"10000002"'),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"type"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"reverse"'),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),J=n("p",null,[n("strong",null,"Response")],-1),O=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},'"item_name"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"神里绫华"'),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("p",null,[n("strong",null,"Request Body")],-1),V=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},'"lang"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"chs"'),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"item_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"[10000000, 10000003, 10000002]"'),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"type"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token string"},'"reverse"'),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("p",null,[n("strong",null,"Response")],-1),H=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},'"item_name"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"["),e(`
    `),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token string"},'"琴"'),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token string"},'"神里绫华"'),e(`
  `),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S={id:"语言判断接口",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#语言判断接口","aria-hidden":"true"},"#",-1),W=u('<p>该接口用于当无法判断原始文本语言时使用，不应该依赖其作为物品文本和物品 ID 之间的批量转换</p><ul><li>接口 URL <ul><li><code>https://api.uigf.org/generic-translate/{text}</code></li></ul></li></ul><h4 id="请求参数-1" tabindex="-1"><a class="header-anchor" href="#请求参数-1" aria-hidden="true">#</a> 请求参数</h4><ul><li><code>text</code><ul><li>单个需要翻译的文本 <ul><li>比如：<code>神里绫华</code></li></ul></li></ul></li></ul><h4 id="返回格式-1" tabindex="-1"><a class="header-anchor" href="#返回格式-1" aria-hidden="true">#</a> 返回格式</h4><ul><li>成功时，将返回一个<code>Json</code><ul><li><code>item_id</code>键的值即为对应物品 ID</li><li><code>lang</code>键的值为一个列表，其包含找到的对应语言。通常情况，该列表仅会有一个语言代码。但在少数情况下，一个文本可能在多个语言下代表同一个物品。 这种情况下，列表中会有多个语言代码。</li></ul></li><li>失败时，将返回 <code>HTTP 404 NOT FOUND</code> 错误</li></ul>',6),X={href:"https://api.uigf.org/generic-translate/%E7%A5%9E%E9%87%8C%E7%BB%AB%E5%8D%8E",target:"_blank",rel:"noopener noreferrer"},Y=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},'"item_id"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"10000002"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"lang"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token punctuation"},"["),e(`
    `),n("span",{class:"token string"},'"chs"'),e(`
  `),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Z={id:"字典下载接口",tabindex:"-1"},$=n("a",{class:"header-anchor",href:"#字典下载接口","aria-hidden":"true"},"#",-1),z=u('<p>对于有能力在服务端或用户端进行物品文本和物品 ID 转换的工具，我们推荐减少对 UIGF 在线翻译 API 的依赖。</p><p>你可以通过字典下载接口获取到各个语言的物品文本和物品 ID 转换关系的 Json 文件</p><ul><li>接口 URL <ul><li><code>https://api.uigf.org/dict/{lang}.json</code></li></ul></li></ul><h4 id="请求参数-2" tabindex="-1"><a class="header-anchor" href="#请求参数-2" aria-hidden="true">#</a> 请求参数</h4><ul><li><code>lang</code><ul><li>语言代码，目前可接受的语言包含 <code>chs</code>, <code>cht</code>, <code>de</code>, <code>en</code>, <code>es</code>, <code>fr</code>, <code>id</code>, <code>jp</code>, <code>kr</code>, <code>pt</code>, <code>ru</code>, <code>th</code>, <code>vi</code></li></ul></li></ul><h4 id="返回格式-2" tabindex="-1"><a class="header-anchor" href="#返回格式-2" aria-hidden="true">#</a> 返回格式</h4><ul><li>Json 文件的下载</li></ul>',7),K={href:"https://api.uigf.org/dict/jp.json",target:"_blank",rel:"noopener noreferrer"},M=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token property"},'"無鋒の剣"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"11101"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"銀の剣"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"11201"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"冷刃"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"11301"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"黎明の神剣"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"11302"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"旅道の剣"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"11303"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"..."'),n("span",{class:"token operator"},":"),n("span",{class:"token string"},'"..."'),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"重雲（テスト）"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"11000042"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"お試しキャラ"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"11000043"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token property"},'"七七（テスト）"'),n("span",{class:"token operator"},":"),e(),n("span",{class:"token number"},"11000044"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Q=n("p",null,null,-1);function nn(en,sn){const i=d("ExternalLinkIcon"),c=d("Badge"),r=d("Tabs");return m(),k("div",null,[b,v,_,g,n("p",null,[e("本 API 已开源于 "),n("a",y,[e("UIGF-org/UIGF-API"),s(i)])]),f,j,n("h3",x,[I,e(" 翻译接口 "),s(c,{text:"POST",type:"tip",vertical:"top"})]),q,s(r,{id:"221",data:[{title:"单条翻译查询"},{title:"多条翻译查询"},{title:"单条反向翻译查询"},{title:"多条反向翻译查询"}]},{tab0:a(({title:t,value:l,isActive:o})=>[A,D,T,P,U]),tab1:a(({title:t,value:l,isActive:o})=>[B,F,E,G]),tab2:a(({title:t,value:l,isActive:o})=>[N,R,J,O]),tab3:a(({title:t,value:l,isActive:o})=>[L,V,C,H]),_:1}),n("h3",S,[w,e(" 语言判断接口 "),s(c,{text:"GET",type:"info",vertical:"top"})]),W,s(r,{id:"337",data:[{title:"样例"},{title:"返回值"}]},{tab0:a(({title:t,value:l,isActive:o})=>[n("p",null,[n("a",X,[e("https://api.uigf.org/generic-translate/神里绫华"),s(i)])])]),tab1:a(({title:t,value:l,isActive:o})=>[Y]),_:1}),n("h3",Z,[$,e(" 字典下载接口 "),s(c,{text:"GET",type:"info",vertical:"top"})]),z,s(r,{id:"397",data:[{title:"样例"},{title:"返回值"}]},{tab0:a(({title:t,value:l,isActive:o})=>[n("p",null,[n("a",K,[e("https://api.uigf.org/dict/jp.json"),s(i)])])]),tab1:a(({title:t,value:l,isActive:o})=>[M,Q]),_:1})])}const tn=p(h,[["render",nn],["__file","API.html.vue"]]);export{tn as default};
